{
	"_method_": {
		"VP ADD FORMULA NAME": {
			"Syntax": "**VP ADD FORMULA NAME** ( *vpAreaName* : Text ; *vpFormula* : Text ; *name* : Text { ; *options* : Object } )",
			"Params": [
				[
					"vpAreaName",
					"Text",
					"->",
					"Nom d'objet formulaire zone 4D View Pro"
				],
				[
					"vpFormula",
					"Text",
					"->",
					"Formule 4D View Pro"
				],
				[
					"name",
					"Text",
					"->",
					"Nom de la formule"
				],
				[
					"options",
					"Object",
					"->",
					"Options de la formule nommée"
				]
			],
			"Summary": "permet de créer ou de modifier une formule nommée dans le document courant"
		},
		"VP ADD RANGE NAME": {
			"Syntax": "**VP ADD RANGE NAME** ( *rangeObj* : Object ; *name* : Text { ; *options* : Object } )",
			"Params": [
				[
					"rangeObj",
					"Object",
					"->",
					"Objet plage"
				],
				[
					"name",
					"Text",
					"->",
					"Nom de la formule"
				],
				[
					"options",
					"Object",
					"->",
					"Options de la formule nommée"
				]
			],
			"Summary": "crée ou modifie une plage nommée dans le document ouvert"
		},
		"VP ADD SELECTION": {
			"Syntax": "**VP ADD SELECTION** ( *rangeObj* : Object )",
			"Params": [
				[
					"rangeObj",
					"Text",
					"->",
					"Objet plage"
				]
			],
			"Summary": "ajoute les cellules spécifiées aux cellules sélectionnées"
		},
		"VP ADD SHEET": {
			"Syntax": "**VP ADD SHEET** ( *vpAreaName* : Text )<br>**VP ADD SHEET** ( *vpAreaName* : Text ; *index* : Integer )<br>**VP ADD SHEET** ( *vpAreaName* : Text ; *sheet* : Integer ; *name* : Text )",
			"Params": [
				[
					"vpAreaName",
					"Text",
					"->",
					"Nom d'objet formulaire zone 4D View Pro"
				],
				[
					"sheet",
					"Integer",
					"->",
					"Indice de la nouvelle feuille"
				],
				[
					"name",
					"Text",
					"->",
					"Nom de la feuille"
				]
			],
			"Summary": "insère une feuille dans le document chargé dans *vpAreaName*."
		},
		"VP ADD SPAN": {
			"Syntax": "**VP ADD SPAN** ( *rangeObj* : Object )",
			"Params": [
				[
					"rangeObj",
					"Object",
					"->",
					"Objet plage"
				]
			]
		},
		"VP ADD STYLESHEET": {
			"Syntax": "**VP ADD STYLESHEET** ( *vpAreaName* : Text ; *styleName* : Text ; *styleObj* : Object { ; *sheet* : Integer } )",
			"Params": [
				[
					"vpAreaName",
					"Text",
					"->",
					"Nom d'objet formulaire zone 4D View Pro"
				],
				[
					"styleName",
					"Text",
					"->",
					"Nom du style"
				],
				[
					"styleObj",
					"Object",
					"->",
					"Objet définissant les propriétés de l'attribut"
				],
				[
					"sheet",
					"Entier",
					"->",
					"Indice de la feuille (feuille courante si omis)"
				]
			],
			"Summary": "crée ou modifie la feuille de style *styleName* basée sur la combinaison de propriétés indiquées dans *styleObj* dans le document courant"
		},
		"VP ALL": {
			"Syntax": "**VP All** ( *vpAreaName* : Text { ; *sheet* : Integer } )  : Object",
			"Params": [
				[
					"vpAreaName",
					"Text",
					"->",
					"Nom d'objet formulaire zone 4D View Pro"
				],
				[
					"sheet",
					"Integer",
					"->",
					"Indice de la feuille (feuille courante si omis)"
				],
				[
					"Résultat",
					"Object",
					"<-",
					"Objet plage de toutes les cellules"
				]
			],
			"Summary": "retourne une nouvelle plage référençant toutes les cellules"
		},
		"VP Cell": {
			"Syntax": "**VP Cell** ( *vpAreaName* ; *column* : Integer ; *row* : Integer ; Text { ; *sheet* : Integer } )  : Object",
			"Params": [
				[
					"vpAreaName",
					"Text",
					"->",
					"Nom d'objet formulaire zone 4D View Pro"
				],
				[
					"column",
					"Longint",
					"->",
					"Indice de la feuille (feuille courante si omis)"
				],
				[
					"row",
					"Longint",
					"->",
					"Indice de la feuille (feuille courante si omis)"
				],
				[
					"sheet",
					"Integer",
					"->",
					"Indice de la feuille (feuille courante si omis)"
				],
				[
					"Résultat",
					"Object",
					"<-",
					"Objet plage de toutes les cellules"
				]
			],
			"Summary": "retourne une nouvelle plage référençant une cellule spécifique"
		},
		"VP Cells": {
			"Syntax": "**VP Cells** ( *vpAreaName* : Text ; *column*: Integer ; *row*: Integer ; *columnCount* : Integer ; *rowCount* : Integer { ; *sheet* : Integer } ) : Object",
			"Params": [
				[
					"vpAreaName",
					"Text",
					"->",
					"Nom d'objet formulaire zone 4D View Pro"
				],
				[
					"column",
					"Integer",
					"->",
					"Indice de la colonne"
				],
				[
					"row",
					"Integer",
					"->",
					"Indice de la ligne"
				],
				[
					"columnCount",
					"Integer",
					"->",
					"Nombre de colonnes"
				],
				[
					"rowCount",
					"Integer",
					"->",
					"Nombre de lignes"
				],
				[
					"sheet",
					"Integer",
					"->",
					"Indice de la feuille (feuille courante si omis)"
				],
				[
					"Résultat",
					"Object",
					"<-",
					"Objet plage de toutes les cellules"
				]
			],
			"Summary": "retourne une nouvelle plage référençant des cellules spécifiques"
		},
		"VP Column": {
			"Syntax": "**VP Column** ( *vpAreaName* : Text ; *column*: Integer ; *columnCount* : Integer { ; *sheet* : Integer } ) : Object",
			"Params": [
				[
					"vpAreaName",
					"Text",
					"->",
					"Nom d'objet formulaire zone 4D View Pro"
				],
				[
					"column",
					"Integer",
					"->",
					"Indice de la colonne"
				],
				[
					"columnCount",
					"Integer",
					"->",
					"Nombre de colonnes"
				],
				[
					"sheet",
					"Integer",
					"->",
					"Indice de la feuille (feuille courante si omis)"
				],
				[
					"Résultat",
					"Object",
					"<-",
					"Objet plage de toutes les cellules"
				]
			],
			"Summary": "retourne une nouvelle plage référençant une ou plusieurs colonnes"
		},
		"VP COLUMN AUTOFIT": {
			"Syntax": "**VP COLUMN AUTOFIT** ( *rangeObj* : Object )",
			"Params": [
				[
					"rangeObj",
					"Object",
					"->",
					"Objet plage"
				]
			],
			"Summary": "dimensionne automatiquement dans *rangeObj* la ou les colonne(s) en fonction de leur contenu"
		},
		"VP Combine Ranges": {
			"Syntax": "**VP Combine Ranges** ( *rangeObj* : Object ; *otherRangeObj* : Object {;...*otherRangeObjN* : Object }  ) : Object",
			"Params": [
				[
					"rangeObj",
					"Object",
					"->",
					"Objet plage"
				],
				[
					"otherRangeObj",
					"Object",
					"->",
					"Objet plage"
				],
				[
					"Résultat",
					"Object",
					"<-",
					"Objet contenant une plage combinée"
				]
			],
			"Summary": "retourne une nouvelle plage qui incorpore au moins deux plages existantes"
		},
		"VP Convert from 4D View": {
			"Syntax": "**VP Convert from 4D View** ( *4DViewDocument* : Blob ) : Object",
			"Params": [
				[
					"4DViewDocument",
					"Blob",
					"->",
					"Document 4D View"
				],
				[
					"Résultat",
					"Object",
					"<-",
					"Objet 4D View Pro"
				]
			],
			"Summary": "vous permet de convertir un document 4D View existant en un objet 4D View Pro"
		},
		"VP Convert to picture": {
			"Syntax": "**VP Convert to picture** ( *vpObject* : Object {; *rangeObj* : Object} ) : Picture",
			"Params": [
				[
					"vpObject",
					"Object",
					"->",
					"Objet 4D View Pro contenant la zone à convertir"
				],
				[
					"rangeObj",
					"Object",
					"->",
					"Objet plage"
				],
				[
					"Résultat",
					"Object",
					"<-",
					"Image SVG de la zone"
				]
			],
			"Summary": "convertit l'objet *vpObject* 4D View Pro (ou la plage *rangeObj* dans *vpObject*) en une image SVG"
		},
		"VP Copy to object": {
			"Syntax": "**VP Copy to object** ( *rangeObj* : Object {; *options* : Object} ) : Object",
			"Params": [
				[
					"rangeObj",
					"Object",
					"->",
					"Objet plage"
				],
				[
					"options",
					"Object",
					"->",
					"Options supplémentaires"
				],
				[
					"Résultat",
					"Object",
					"<-",
					"Objet retourné. Contient les données copiées"
				]
			],
			"Summary": "copie le contenu, le style et les formules de *rangeObj* vers un objet"
		},
		"VP CREATE TABLE": {
			"Syntax": "**VP CREATE TABLE** ( *rangeObj* : Object ; *tableName* : Text {; *source* : Text} {; *options* : Object} )",
			"Params": [
				[
					"rangeObj",
					"Object",
					"->",
					"Objet plage"
				],
				[
					"tableName",
					"Text",
					"->",
					"Name for the table"
				],
				[
					"source",
					"Text",
					"->",
					"Data context property name to display in the table"
				],
				[
					"options",
					"Object",
					"->",
					"Options supplémentaires"
				]
			],
			"Summary": "creates a table in the specified range"
		},
		"VP DELETE COLUMNS": {
			"Syntax": "**VP DELETE COLUMNS** ( *rangeObj* : Object )",
			"Params": [
				[
					"rangeObj",
					"Object",
					"->",
					"Objet plage"
				]
			],
			"Summary": "supprime les colonnes de *rangeObj*"
		},
		"VP DELETE ROWS": {
			"Syntax": "**VP DELETE ROWS** ( *rangeObj* : Object )",
			"Params": [
				[
					"rangeObj",
					"Object",
					"->",
					"Objet plage"
				]
			],
			"Summary": "supprime les lignes de *rangeObj*"
		},
		"VP EXPORT DOCUMENT": {
			"Syntax": "**VP EXPORT DOCUMENT** ( *vpAreaName* : Text ; *filePath* : Text {; *paramObj* : Object} )",
			"Params": [
				[
					"vpAreaName",
					"Text",
					"->",
					"Nom d'objet formulaire zone 4D View Pro"
				],
				[
					"filePath",
					"Text",
					"->",
					"Chemin d'accès du document"
				],
				[
					"paramObj",
					"Object",
					"->",
					"Options d'export"
				]
			],
			"Summary": "exporte l'objet 4D View Pro attaché à la zone 4D View Pro *vpAreaName* vers un document sur disque en fonction des paramètres *filePath* et *paramObj*"
		},
		"VP Export to object": {
			"Syntax": "**VP Export to object** ( *vpAreaName* : Text {; *options* : Object} ) : Object",
			"Params": [
				[
					"vpAreaName",
					"Text",
					"->",
					"Nom d'objet formulaire zone 4D View Pro"
				],
				[
					"options",
					"Object",
					"->",
					"Options d'export"
				],
				[
					"Résultat",
					"Object",
					"<-",
					"Objet 4D View Pro"
				]
			],
			"Summary": "retourne l'objet 4D View Pro associé à la zone 4D View Pro *vpAreaName*"
		},
		"VP Find": {
			"Syntax": "**VP Find** (  *rangeObj* : Object ; *searchValue* : Text ) : Object<br>**VP Find** (  *rangeObj* : Object ; *searchValue* : Text ; *searchCondition* : Object } ) : Object<br>**VP Find** (  *rangeObj* : Object ; *searchValue* : Text ; *searchCondition* : Object ; *replaceValue* : Text ) : Object",
			"Params": [
				[
					"rangeObj",
					"Object",
					"->",
					"Objet plage"
				],
				[
					"searchValue",
					"Text",
					"->",
					"Valeur de recherche"
				],
				[
					"searchCondition",
					"Object",
					"->",
					"Objet contenant la/les condition(s) de recherche"
				],
				[
					"replaceValue",
					"Text",
					"->",
					"Valeur de remplacement"
				],
				[
					"Résultat",
					"Object",
					"<-",
					"Objet plage"
				]
			],
			"Summary": "recherche le paramètre *rangeObj* pour *searchValue*"
		},
		"VP FLUSH COMMANDS": {
			"Syntax": "**VP FLUSH COMMANDS** (  *vpAreaName* : Text )",
			"Params": [
				[
					"vpAreaName",
					"Text",
					"->",
					"Nom d'objet formulaire zone 4D View Pro"
				]
			],
			"Summary": "immédiatement les commandes empilées et vide le buffer de commandes"
		},
		"VP Font to object": {
			"Syntax": "**VP Font to object** (  *font* : Text ) : Object",
			"Params": [
				[
					"font",
					"Text",
					"->",
					"Chaîne raccourcie pour la police (shorthand)"
				]
			],
			"Summary": "retourne un objet d'une chaîne raccourcie pour la police (shorthand)"
		},
		"VP Get active cell": {
			"Syntax": "**VP Get active cell** (  *vpAreaName* : Text { ; *sheet* : Integer } ) : Object",
			"Params": [
				[
					"vpAreaName",
					"Text",
					"->",
					"Nom d'objet formulaire zone 4D View Pro"
				],
				[
					"sheet",
					"Integer",
					"->",
					"Indice de la feuille (feuille courante si omis)"
				],
				[
					"Résultat",
					"Object",
					"<-",
					"Objet plage d'une seule cellule"
				]
			],
			"Summary": "retourne un nouvel objet plage référençant la cellule active, dans laquelle de nouvelles données seront saisies"
		},
		"VP Get binding path": {
			"Syntax": "**VP Get binding path** ( *rangeObj* : Object ) : Text",
			"Params": [
				[
					"rangeObj",
					"Object",
					"->",
					"Objet plage"
				],
				[
					"Résultat",
					"Text",
					"<-",
					"Name of the attribute bound to the cell"
				]
			],
			"Summary": "returns the name of the attribute bound to the cell specified in *rangeObj*"
		},
		"VP Get cell style": {
			"Syntax": "**VP Get cell style** (  *rangeObj* : Object ) : Object",
			"Params": [
				[
					"rangeObj",
					"Object",
					"->",
					"Objet plage"
				],
				[
					"Résultat",
					"Object",
					"<-",
					"Objet style"
				]
			],
			"Summary": "retourne un objet style pour la première cellule de *rangeObj*"
		},
		"VP Get column attributes": {
			"Syntax": "**VP Get column attributes** (  *rangeObj* : Object ) : Collection",
			"Params": [
				[
					"rangeObj",
					"Object",
					"->",
					"Objet plage"
				],
				[
					"Résultat",
					"Collection",
					"<-",
					"Collection de propriétés de colonnes"
				]
			],
			"Summary": "retourne une collection de propriétés pour les colonnes de *rangeObj*"
		},
		"VP Get column count": {
			"Syntax": "**VP Get column count** ( *vpAreaName* : Text { ; *sheet* :  Integer } ) : Integer",
			"Params": [
				[
					"vpAreaName",
					"Text",
					"->",
					"Nom de la zone 4D View Pro dans le formulaire"
				],
				[
					"sheet",
					"Integer",
					"->",
					"Indice de la feuille (feuille courante si omis)"
				],
				[
					"Résultat",
					"Integer",
					"<-",
					"Nombre total de colonnes"
				]
			],
			"Summary": "retourne le nombre total de colonnes de la feuille (*sheet*) désignée"
		},
		"VP Get current sheet": {
			"Syntax": "**VP Get current sheet** ( *vpAreaName* : Text )",
			"Params": [
				[
					"vpAreaName",
					"Text",
					"->",
					"Nom d'objet formulaire zone 4D View Pro"
				],
				[
					"Résultat",
					"Integer",
					"<-",
					"Indice de la feuille courante"
				]
			],
			"Summary": "retourne l'indice de la feuille courante dans *vpAreaName*. La feuille courante est la feuille sélectionnée dans le document."
		},
		"VP Get data context": {
			"Syntax": "**VP Get data context** ( *vpAreaName* : Text {; *sheet* : Integer } ) : Object<br/>**VP Get data context** ( *vpAreaName* : Text {; *sheet* : Integer } ) : Collection",
			"Params": [
				[
					"vpAreaName",
					"Object",
					"->",
					"Nom d'objet formulaire zone 4D View Pro"
				],
				[
					"sheet",
					"Integer",
					"->",
					"Index of the sheet to get the data context from"
				],
				[
					"Résultat",
					"Object &#124; Collection",
					"<-",
					"Data context"
				]
			],
			"Summary": "returns the current data context of a worksheet"
		},
		"VP Get default style": {
			"Syntax": "**VP Get default style** ( *vpAreaName* : Text { ; *sheet* :  Integer } ) : Integer",
			"Params": [
				[
					"",
					"",
					"",
					""
				],
				[],
				[
					"vpAreaName",
					"Text",
					"->",
					"4D View Pro area from object name",
					"",
					"sheet",
					"Integer",
					"->",
					"Sheet index (current sheet if omitted)",
					"",
					"Result",
					"Integer",
					"<-",
					"Total number of columns"
				]
			],
			"Summary": "retourne un objet feuille de style par défaut pour une feuille"
		},
		"VP Get formula": {
			"Syntax": "**VP Get formula** ( *rangeObj* : Object) : Text",
			"Params": [
				[
					"rangeObj",
					"Object",
					"->",
					"Objet plage"
				],
				[
					"Résultat",
					"Text",
					"<-",
					"Formula"
				]
			],
			"Summary": "récupère la formule depuis une plage de cellules désignée"
		},
		"VP Get formula by name": {
			"Syntax": "**VP Get formula by name** ( *vpAreaName* : Text ; *name* : Text { ; *scope* : Number } ) : Object",
			"Params": [
				[
					"vpAreaName",
					"Text",
					"->",
					"Nom d'objet formulaire zone 4D View Pro"
				],
				[
					"name",
					"Text",
					"->",
					"Nom de la plage nommée"
				],
				[
					"scope",
					"Nombre",
					"->",
					"\"Scope\" cible (par défaut=feuille courante)"
				],
				[
					"Résultat",
					"Text",
					"<-",
					"Définition de la formule nommée ou de la plage nommée"
				]
			],
			"Summary": "retourne la formule et le commentaire correspondant à la plage nommée ou à la formule nommée qui a été passée dans le paramètre *name*, ou retourne **null** si le nom n'existe pas dans le scope défini"
		},
		"VP Get formulas": {
			"Syntax": "**VP Get formulas** ( *rangeObj* : Object ) : Collection",
			"Params": [
				[
					"rangeObj",
					"Object",
					"->",
					"Objet plage"
				],
				[
					"Résultat",
					"Collection",
					"<-",
					"Collection de valeurs d'une formule"
				]
			],
			"Summary": "récupère les formules d'un *rangeObj*déterminé"
		},
		"VP Get frozen panes": {
			"Syntax": "**VP Get frozen panes** ( vpAreaName : Text { ; sheet : Integer } ) : Object",
			"Params": [
				[
					"vpAreaName",
					"Text",
					"->",
					"Nom d'objet formulaire zone 4D View Pro"
				],
				[
					"sheet",
					"Integer",
					"->",
					"Indice de la feuille (feuille courante si omis)"
				],
				[
					"Résultat",
					"Object",
					"<-",
					"Objet contenant des informations sur les colonnes et lignes figées"
				]
			],
			"Summary": "retourne un objet contenant des informations sur les lignes et colonnes figées de *vpAreaName*"
		},
		"VP Get names": {
			"Syntax": "**VP Get names** ( vpAreaName : Text { ; scope : Number } ) : Collection",
			"Params": [
				[
					"vpAreaName",
					"Text",
					"->",
					"Nom d'objet formulaire zone 4D View Pro"
				],
				[
					"scope",
					"Nombre",
					"->",
					"\"Scope\" cible (par défaut=feuille courante)"
				],
				[
					"Résultat",
					"Collection",
					"<-",
					"Noms existant dans la zone définie"
				]
			],
			"Summary": "retourne une collection de tous les \"noms\" définis dans la feuille courante ou dans la zone définie dans le paramètre *scope*r"
		},
		"VP Get print info": {
			"Syntax": "**VP Get print info** ( vpAreaName : Text { ; sheet : Integer } ) : Object",
			"Params": [
				[
					"vpAreaName",
					"Text",
					"->",
					"Nom d'objet formulaire zone 4D View Pro"
				],
				[
					"sheet",
					"Integer",
					"->",
					"Indice de la feuille (feuille courante si omis)"
				],
				[
					"Résultat",
					"Object",
					"<-",
					"Objet contenant les informations d'impression"
				]
			],
			"Summary": "retourne un objet contenant les attributs d'impression de *vpAreaName*"
		},
		"VP Get row attributes": {
			"Syntax": "**VP Get row attributes** ( rangeObj : Object ) : Collection",
			"Params": [
				[
					"rangeObj",
					"Object",
					"->",
					"Objet plage"
				],
				[
					"Résultat",
					"Collection",
					"<-",
					"Collection de propriétés de lignes"
				]
			],
			"Summary": "retourne une collection de propriétés pour les lignes de *rangeObj*"
		},
		"VP Get row count": {
			"Syntax": "**VP Get row count** ( *vpAreaName* : Text {; *sheet* : Integer } ) : Integer",
			"Params": [
				[
					"vpAreaName",
					"Text",
					"->",
					"Nom de la zone 4D View Pro dans le formulaire"
				],
				[
					"sheet",
					"Integer",
					"->",
					"Indice de la feuille (feuille courante si omis)"
				],
				[
					"Résultat",
					"Integer",
					"<-",
					"Nombre total de lignes"
				]
			],
			"Summary": "retourne le nombre total de lignes de la feuille (*sheet*) désignée"
		},
		"VP Get selection": {
			"Syntax": "**VP Get selection** ( *vpAreaName* : Text {; *sheet* : Integer } ) ) : Object",
			"Params": [
				[
					"vpAreaName",
					"Text",
					"->",
					"Nom de la zone 4D View Pro dans le formulaire"
				],
				[
					"sheet",
					"Integer",
					"->",
					"Indice de la feuille (feuille courante si omis)"
				],
				[
					"Résultat",
					"Object",
					"<-",
					"Objet plage de toutes les cellules"
				]
			],
			"Summary": "retourne un nouvel objet plage référençant les cellules courantes sélectionnées"
		},
		"VP Get sheet count": {
			"Syntax": "**VP Get sheet count** ( *vpAreaName* : Text ) : Integer",
			"Params": [
				[
					"vpAreaName",
					"Text",
					"->",
					"Nom d'objet formulaire zone 4D View Pro"
				],
				[
					"Résultat",
					"Integer",
					"<-",
					"Nombre de feuilles"
				]
			],
			"Summary": "retourne le nombre de feuilles contenues dans le document chargé dans *vpAreaName*."
		},
		"VP Get sheet index": {
			"Syntax": "**VP Get sheet index** ( *vpAreaName* : Text ; *name* : Text ) : Integer",
			"Params": [
				[
					"vpAreaName",
					"Text",
					"->",
					"Nom d'objet formulaire zone 4D View Pro"
				],
				[
					"name",
					"Text",
					"->",
					"Nom de la feuille"
				],
				[
					"Résultat",
					"Integer",
					"<-",
					"Indice de la feuille"
				]
			],
			"Summary": "retourne l'index d'une feuille en fonction de son nom dans *vpAreaName*."
		},
		"VP Get sheet name": {
			"Syntax": "**VP Get sheet name** ( *vpAreaName* : Text ; *sheet* : Integer ) : Text",
			"Params": [
				[
					"vpAreaName",
					"Text",
					"->",
					"Nom d'objet formulaire zone 4D View Pro"
				],
				[
					"sheet",
					"Integer",
					"->",
					"Indice de la feuille"
				],
				[
					"Résultat",
					"Text",
					"<-",
					"Nom de la feuille"
				]
			],
			"Summary": "retourne le nom d'une feuille en fonction de son index dans *vpAreaName*."
		},
		"VP Get sheet options": {
			"Syntax": "**VP Get sheet options** ( *vpAreaName* : Text {; *sheet* : Integer } ) ) : Object",
			"Params": [
				[
					"vpAreaName",
					"Text",
					"->",
					"Nom de la zone 4D View Pro dans le formulaire"
				],
				[
					"sheet",
					"Integer",
					"->",
					"Indice de la feuille (feuille courante si omis)"
				],
				[
					"Résultat",
					"Object",
					"<-",
					"Objet options de la feuille"
				]
			],
			"Summary": "retourne un objet contenant les options relatives à la feuille courante de la zone *vpAreaName*"
		},
		"VP Get show print lines": {
			"Syntax": "**VP Get show print lines** ( *vpAreaName* : Text {; *sheet* : Integer } ) : Boolean",
			"Params": [
				[
					"vpAreaName",
					"Text",
					"->",
					"Nom d'objet formulaire zone 4D View Pro"
				],
				[
					"sheet",
					"Integer",
					"<-",
					"Indice de la feuille"
				],
				[
					"Résultat",
					"Booléen",
					"<-",
					"True si les lignes d'impression sont visibles, sinon False"
				]
			],
			"Summary": "retourne `True` si les lignes d'aperçu avant impression sont visibles et `False` si elles sont masquées."
		},
		"VP Get spans": {
			"Syntax": "**VP Get spans** ( *rangeObj* : Object ) : Object",
			"Params": [
				[
					"rangeObj",
					"Object",
					"->",
					"Objet plage"
				],
				[
					"Résultat",
					"Object",
					"<-",
					"Objet de cellules fusionnées (cell spans) dans la plage définie"
				]
			],
			"Summary": "récupère les cellules fusionnées (cell spans) du paramètre *rangeObj* désigné"
		},
		"VP Get stylesheet": {
			"Syntax": "**VP Get stylesheet** ( *vpAreaName* : Text ; *styleName* : Text { ; *sheet* : Integer } ) : Object",
			"Params": [
				[
					"vpAreaName",
					"Text",
					"->",
					"Nom d'objet formulaire zone 4D View Pro"
				],
				[],
				[
					"styleName",
					"Text",
					"->",
					"Name of style",
					"",
					"sheet",
					"Integer",
					"->",
					"Sheet index (current sheet if omitted)",
					"",
					"Result",
					"Object",
					"<-",
					"Style sheet object"
				]
			],
			"Summary": "retourne l'objet feuille courante *styleName* qui contient les valeurs de propriété qui ont été définies"
		},
		"VP Get stylesheets": {
			"Syntax": "**VP Get stylesheets** ( *vpAreaName* : Text { ; *sheet* : Integer } ) : Collection",
			"Params": [
				[
					"vpAreaName",
					"Text",
					"->",
					"Nom d'objet formulaire zone 4D View Pro"
				],
				[
					"sheet",
					"Integer",
					"->",
					"Cible (par défaut = feuille courante)"
				],
				[
					"Résultat",
					"Collection",
					"<-",
					"Collection d'objets feuille de style"
				]
			],
			"Summary": "returns the collection of defined style sheet objects from the designated *sheet*"
		},
		"VP Get table range": {
			"Syntax": "**VP Get table range** ( *vpAreaName* : Text ; *tableName* : Text {; *onlyData* : Integer {; *sheet* : Integer }} ) : Object",
			"Summary": "returns the range of *tableName*"
		},
		"VP Get tables": {
			"Params": [
				[
					"vpAreaName",
					"Text",
					"->",
					"Nom d'objet formulaire zone 4D View Pro"
				],
				[
					"tableName",
					"Text",
					"->",
					"Table name"
				],
				[
					"onlyData",
					"Integer",
					"->",
					"`vk table full range` (default) or `vk table data range`"
				],
				[
					"sheet",
					"Integer",
					"->",
					"Indice de la feuille (feuille courante si omis)"
				],
				[
					"Résultat",
					"Object",
					"<-",
					"Range that contains the table"
				]
			],
			"Syntax": "**VP Get tables** ( *vpAreaName* : Text { ; *sheet* : Integer } ) : Collection",
			"Summary": "returns a collection of all table names defined in the *sheet*"
		},
		"VP Get value": {
			"Syntax": "**VP Get value** ( *rangeObj* : Object ) : Object",
			"Params": [
				[
					"rangeObj",
					"Object",
					"->",
					"Objet plage"
				],
				[
					"Résultat",
					"Object",
					"<-",
					"Objet contenant une valeur de cellule"
				]
			],
			"Summary": "récupère la valeur d'une cellule depuis une plage de cellules désignée"
		},
		"VP Get values": {
			"Syntax": "**VP Get values** ( *rangeObj* : Object ) : Collection",
			"Params": [
				[
					"rangeObj",
					"Object",
					"->",
					"Objet plage"
				],
				[
					"Résultat",
					"Collection",
					"<-",
					"Collection de valeurs"
				]
			],
			"Summary": "récupère les valeurs du paramètre *rangeObj* désigné"
		},
		"VP Get workbook options": {
			"Syntax": "**VP Get workbook options** ( *vpAreaName* : Text ) : Object",
			"Params": [
				[
					"vpAreaName",
					"Text",
					"->",
					"Nom d'objet formulaire zone 4D View Pro"
				],
				[
					"Résultat",
					"Object",
					"<-",
					"Objet contenant les options de workbook"
				]
			]
		},
		"Get workbook options": {
			"Summary": "returns an object containing all the workbook options in *vpAreaName*"
		},
		"VP IMPORT DOCUMENT": {
			"Syntax": "**VP IMPORT DOCUMENT** ( *vpAreaName* : Text ; *filePath* : Text { ; *paramObj* : Object} )",
			"Params": [
				[
					"vpAreaName",
					"Text",
					"->",
					"Nom d'objet formulaire zone 4D View Pro"
				],
				[
					"filePath",
					"Text",
					"->",
					"Chemin d'accès du document"
				],
				[
					"paramObj",
					"Object",
					"->",
					"Options d'import"
				]
			],
			"Summary": "importe et affiche le document désigné par le dont le chemin d'accès est indiqué dans *filePath* dans la zone *vpAreaName* de 4D View Pro"
		},
		"VP IMPORT FROM OBJECT": {
			"Syntax": "**VP IMPORT FROM OBJECT** ( *vpAreaName* : Text  { ; *viewPro* : Object} )",
			"Params": [
				[
					"vpAreaName",
					"Text",
					"->",
					"Nom d'objet formulaire zone 4D View Pro"
				],
				[
					"viewPro",
					"Object",
					"->",
					"Objet 4D View Pro"
				]
			],
			"Summary": "importe l'objet 4D View Pro *viewPro* et l'affiche dans la zone 4D View Pro *vpAreaName*"
		},
		"VP INSERT COLUMNS": {
			"Syntax": "**VP INSERT COLUMNS** ( *rangeObj* : Object )",
			"Params": [
				[
					"rangeObj",
					"Object",
					"->",
					"Objet plage"
				]
			],
			"Summary": "insère les colonnes définies par *rangeObj*"
		},
		"VP INSERT ROWS": {
			"Syntax": "**VP INSERT ROWS** ( *rangeObj* : Object )",
			"Params": [
				[
					"rangeObj",
					"Object",
					"->",
					"Objet plage"
				]
			],
			"Summary": "insère les lignes définies par *rangeObj*"
		},
		"VP INSERT TABLE COLUMNS": {
			"Syntax": "**VP INSERT TABLE COLUMNS** ( *vpAreaName* : Text ; *tableName* : Text ; *column* : Integer {; *count* : Integer {; *insertAfter* : Integer {; *sheet* : Integer }}} )",
			"Params": [
				[
					"vpAreaName",
					"Text",
					"->",
					"Nom d'objet formulaire zone 4D View Pro"
				],
				[
					"tableName",
					"Text",
					"->",
					"Table name"
				],
				[
					"column",
					"Integer",
					"->",
					"Index in the table of the starting column to insert"
				],
				[
					"count",
					"Text",
					"->",
					"Number of columns to add (must be >0)"
				],
				[
					"insertAfter",
					"Integer",
					"->",
					"`vk table insert before` or `vk table insert after` *column*"
				],
				[
					"sheet",
					"Integer",
					"->",
					"Indice de la feuille (feuille courante si omis)"
				]
			],
			"Summary": "inserts one or *count* empty column(s) in the specified *tableName* at the specified *column* index"
		},
		"VP INSERT TABLE ROWS": {
			"Syntax": "**VP INSERT TABLE ROWS** ( *vpAreaName* : Text ; *tableName* : Text ; *row* : Integer {; *count* : Integer {; *insertAfter* : Integer {; *sheet* : Integer }}} )",
			"Params": [
				[
					"vpAreaName",
					"Text",
					"->",
					"Nom d'objet formulaire zone 4D View Pro"
				],
				[
					"tableName",
					"Text",
					"->",
					"Table name"
				],
				[
					"row",
					"Integer",
					"->",
					"Index in the table of the starting row to insert"
				],
				[
					"count",
					"Text",
					"->",
					"Number of rows to add (must be >0)"
				],
				[
					"insertAfter",
					"Integer",
					"->",
					"`vk table insert before` or `vk table insert after` *row*"
				],
				[
					"sheet",
					"Integer",
					"->",
					"Indice de la feuille (feuille courante si omis)"
				]
			],
			"Summary": "inserts one or *count* empty row(s) in the specified *tableName* at the specified *row* index"
		},
		"VP MOVE CELLS": {
			"Syntax": "**VP MOVE CELLS** ( *originRange* : Object ; *targetRange* : Object ; *options* : Object )",
			"Params": [
				[
					"originRange",
					"Object",
					"->",
					"Cell range to copy from"
				],
				[
					"targetRange",
					"Object",
					"->",
					"Target range for the values, formatting and formulas"
				],
				[
					"options",
					"Object",
					"->",
					"Options supplémentaires"
				]
			],
			"Summary": "moves or copies the values, style and formulas from *originRange* to *targetRange*"
		},
		"VP Name": {
			"Syntax": "**VP Name** ( *vpAreaName* : Text ; *rangeName* : Text { ; *sheet* : Integer }  ) : Object",
			"Params": [
				[
					"vpAreaName",
					"Text",
					"->",
					"Nom d'objet formulaire zone 4D View Pro"
				],
				[
					"rangeName",
					"Text",
					"->",
					"Nom de plage existante"
				],
				[
					"sheet",
					"Integer",
					"->",
					"Emplacement de la plage (si omis, feuille courante)"
				],
				[
					"Résultat",
					"Object",
					"<-",
					"Plage nommée"
				]
			],
			"Summary": "retourne une nouvelle plage référençant une plage nommée"
		},
		"VP NEW DOCUMENT": {
			"Syntax": "**VP NEW DOCUMENT** ( *vpAreaName* : Text )",
			"Params": [
				[
					"vpAreaName",
					"Text",
					"->",
					"Nom d'objet formulaire zone 4D View Pro"
				]
			],
			"Summary": "charge et affiche un nouveau document dans l'objet *vpAreaName* de la zone 4D View Pro sur le formulaire"
		},
		"VP Object to font": {
			"Syntax": "**VP Object to font** ( *fontObj* : Object ) : Text",
			"Params": [
				[
					"font object",
					"Object",
					"->",
					"Objet police"
				],
				[
					"Résultat",
					"Text",
					"<-",
					"Police raccourcie (shorthand)"
				]
			],
			"Summary": "retourne une chaîne raccourcie pour la police (shorthand) de *fontObj*"
		},
		"PASTE FROM OBJECT": {
			"Syntax": "**VP PASTE FROM OBJECT** ( *rangeObj* : Object ; *dataObject* : Object {; *options* : Longint} )",
			"Params": [
				[
					"rangeObj",
					"Object",
					"->",
					"Cell range object"
				],
				[
					"dataObject",
					"Object",
					"->",
					"Object containing the data to be pasted"
				],
				[
					"options",
					"Longint",
					"->",
					"Specifies what is pasted"
				]
			],
			"Summary": "pastes the contents, style and formulas stored in *dataObject* to the *rangeObj* object"
		},
		"VP PRINT": {
			"Syntax": "**VP PRINT** ( *vpAreaName* : Text  { ; *sheet* : Integer } )",
			"Params": [
				[
					"vpAreaName",
					"Text",
					"->",
					"Nom d'objet formulaire zone 4D View Pro"
				],
				[
					"sheet",
					"Integer",
					"->",
					"Indice de la feuille (feuille courante si omis)"
				]
			],
			"Summary": "ouvre une fenêtre de dialogue d'impression pour imprimer *vpAreaName*"
		},
		"VP RECOMPUTE FORMULAS": {
			"Syntax": "**VP RECOMPUTE FORMULAS** ( *vpAreaName* : Text )",
			"Params": [
				[
					"vpAreaName",
					"Text",
					"->",
					"Nom d'objet formulaire zone 4D View Pro"
				]
			],
			"Summary": "évalue immédiatement toutes les formules de *vpAreaName*"
		},
		"VP REMOVE NAME": {
			"Syntax": "**VP REMOVE NAME** ( *vpAreaName* : Text  ; *name*  : Text { ; *sheet* : Integer } )",
			"Params": [
				[
					"vpAreaName",
					"Text",
					"->",
					"Nom d'objet formulaire zone 4D View Pro"
				],
				[
					"name",
					"Text",
					"->",
					"Nom de la plage nommée ou de la formule nommée à supprimer"
				],
				[
					"scope",
					"Integer",
					"->",
					"\"Scope\" cible (par défaut=feuille courante)"
				]
			],
			"Summary": "permet de supprimer la plage nommée ou la formule nommée que vous avez passée dans le paramètre *name* dans le *scope* défini"
		},
		"VP REMOVE SHEET": {
			"Syntax": "**VP REMOVE SHEET** ( *vpAreaName* : Text ; *index*: Integer )",
			"Params": [
				[
					"vpAreaName",
					"Text",
					"->",
					"Nom d'objet formulaire zone 4D View Pro"
				],
				[
					"index",
					"Integer",
					"->",
					"Index of the sheet to remove"
				]
			],
			"Summary": "removes the sheet with the specified *index* from the document loaded in *vpAreaName*"
		},
		"VP REMOVE SPAN": {
			"Syntax": "**VP REMOVE SPAN** ( *rangeObj* : Object )",
			"Params": [
				[
					"rangeObj",
					"Object",
					"->",
					"Objet plage"
				]
			],
			"Summary": "supprime la fusion des cellules de *rangeObj*"
		},
		"VP REMOVE STYLESHEET": {
			"Syntax": "**VP REMOVE STYLESHEET** ( *vpAreaName* : Text ; *styleName* : Text { ; *sheet* : Integer } )",
			"Params": [
				[
					"vpAreaName",
					"Text",
					"->",
					"Nom d'objet formulaire zone 4D View Pro"
				],
				[
					"styleName",
					"Text",
					"->",
					"Nom du style à supprimer"
				],
				[
					"sheet",
					"Integer",
					"->",
					"Indice de la feuille (feuille courante si omis)"
				]
			],
			"Summary": "supprime la feuille de style passée dans *styleName* de *vpAreaName*"
		},
		"VP REMOVE TABLE": {
			"Syntax": "**VP REMOVE TABLE** ( *vpAreaName* : Object; *tableName* : Text {; *options* : Integer} {; *sheet* : Integer}} )",
			"Params": [
				[
					"vpAreaName",
					"Text",
					"->",
					"View Pro area name"
				],
				[
					"tableName",
					"Text",
					"->",
					"Name of the table to remove"
				],
				[
					"options",
					"Integer",
					"->",
					"Options supplémentaires"
				],
				[
					"sheet",
					"Integer",
					"->",
					"Indice de la feuille (feuille courante si omis)"
				]
			],
			"Summary": "removes a table"
		},
		"VP REMOVE TABLE COLUMNS": {
			"Syntax": "**VP REMOVE TABLE COLUMNS** ( *vpAreaName* : Text ; *tableName* : Text ; *column* : Integer {; *count* : Integer {; *sheet* : Integer }}} )",
			"Params": [
				[
					"vpAreaName",
					"Text",
					"->",
					"Nom d'objet formulaire zone 4D View Pro"
				],
				[
					"tableName",
					"Text",
					"->",
					"Table name"
				],
				[
					"column",
					"Integer",
					"->",
					"Index in the table of the starting column to remove"
				],
				[
					"count",
					"Text",
					"->",
					"Number of columns to remove (must be >0)"
				],
				[
					"sheet",
					"Integer",
					"->",
					"Indice de la feuille (feuille courante si omis)"
				]
			],
			"Summary": "removes one or *count* column(s) in the specified *tableName* at the specified *column* index"
		},
		"VP REMOVE TABLE ROWS": {
			"Syntax": "**VP REMOVE TABLE ROWS** ( *vpAreaName* : Text ; *tableName* : Text ; *row* : Integer {; *count* : Integer {; *sheet* : Integer }}} )",
			"Params": [
				[
					"vpAreaName",
					"Text",
					"->",
					"Nom d'objet formulaire zone 4D View Pro"
				],
				[
					"tableName",
					"Text",
					"->",
					"Table name"
				],
				[
					"row",
					"Integer",
					"->",
					"Index in the table of the starting row to remove"
				],
				[
					"count",
					"Text",
					"->",
					"Number of rows to remove (must be >0)"
				],
				[
					"sheet",
					"Integer",
					"->",
					"Indice de la feuille (feuille courante si omis)"
				]
			],
			"Summary": "removes one or *count* row(s) from the specified *tableName* at the specified *row* index"
		},
		"VP RESET SELECTION": {
			"Syntax": "**VP RESET SELECTION** ( *vpAreaName* : Text { ; *sheet* : Integer } )",
			"Params": [
				[
					"vpAreaName",
					"Text",
					"->",
					"Nom d'objet formulaire zone 4D View Pro"
				],
				[
					"sheet",
					"Integer",
					"->",
					"Indice de la feuille (feuille courante si omis)"
				]
			],
			"Summary": "désélectionne toutes les cellules, de telle façon qu'il n'existe plus aucune sélection courante ou cellule active visible"
		},
		"VP RESIZE TABLE": {
			"Syntax": "**VP RESIZE TABLE** ( *rangeObj* : Object; *tableName* : Text )",
			"Params": [
				[
					"rangeObj",
					"Object",
					"->",
					"New range for the table"
				],
				[
					"tableName",
					"Text",
					"->",
					"Nom de la table"
				]
			],
			"Summary": "changes the *tableName* size with regards to the *rangeObj*"
		},
		"VP RESUME COMPUTING": {
			"Syntax": "**VP RESUME COMPUTING** ( *vpAreaName* : Text )",
			"Params": [
				[
					"vpAreaName",
					"Text",
					"->",
					"Nom d'objet formulaire zone 4D View Pro"
				]
			],
			"Summary": "redémarre le calcul des formules dans *vpAreaName*"
		},
		"VP Row": {
			"Syntax": "**VP Row** ( *vpAreaName* : Text; *row* : Integer { ; *rowCount* : Integer { ; *sheet* : Integer } } ) : Object",
			"Params": [
				[
					"vpAreaName",
					"Text",
					"->",
					"Nom d'objet formulaire zone 4D View Pro"
				],
				[
					"row",
					"Integer",
					"->",
					"Indice de la ligne"
				],
				[
					"rowCount",
					"Integer",
					"->",
					"Nombre de lignes"
				],
				[
					"sheet",
					"Integer",
					"->",
					"Indice de la feuille (feuille courante si omis)"
				],
				[
					"Résultat",
					"Object",
					"<-",
					"Plage de ligne(s)"
				]
			],
			"Summary": "retourne une nouvelle plage référençant une ou plusieurs lignes spécifiques"
		},
		"VP ROW AUTOFIT": {
			"Syntax": "**VP ROW AUTOFIT** ( *rangeObj* : Object)",
			"Params": [
				[
					"rangeObj",
					"Object",
					"->",
					"Objet plage"
				]
			],
			"Summary": "dimensionne automatiquement dans *rangeObj* la ou les ligne(s) en fonction de leur contenu"
		},
		"VP Run offscreen area": {
			"Syntax": "**VP Run offscreen area** ( *parameters* : Object) : Mixed",
			"Params": [
				[
					"parameters",
					"Object",
					"->",
					"Objet contenant les attributs de la zone hors écran"
				],
				[
					"Résultat",
					"Mixed",
					"<-",
					"Propriété `.result` de l'objet `.onEvent`, ou Null s'il ne retourne pas de valeur"
				]
			],
			"Summary": "crée, dans la mémoire, une zone hors écran qui peut être utilisée pour traiter les commandes et fonctions d'une zone 4D View Pro"
		},
		"VP SET ACTIVE CELL": {
			"Syntax": "**VP SET ACTIVE CELL** ( *rangeObj* : Object)",
			"Params": [
				[
					"rangeObj",
					"Object",
					"->",
					"Objet plage"
				]
			],
			"Summary": "définit comme active une cellule spécifique"
		},
		"VP SET ALLOWED METHODS": {
			"Syntax": "**VP SET ALLOWED METHODS** ( *methodObj* : Object)",
			"Params": [
				[
					"methodObj",
					"Object",
					"->",
					"Méthodes autorisées dans les zones 4D View Pro"
				]
			],
			"Summary": "désigne les méthodes projets qui peuvent être appelées dans des formules 4D View Pro"
		},
		"VP SET BINDING PATH": {
			"Syntax": "**VP SET BINDING PATH** ( *rangeObj* : Object  ; *dataContextAttribute*  : Text)",
			"Params": [
				[
					"rangeObj",
					"Object",
					"->",
					"Objet plage"
				],
				[
					"dataContextAttribute",
					"Text",
					"->",
					"Name of the attribute to bind to *rangeObj*"
				]
			],
			"Summary": "binds an attribute from a sheet's data context to *rangeObj*"
		},
		"VP SET BOOLEAN VALUE": {
			"Syntax": "**VP SET BOOLEAN VALUE** ( *rangeObj* : Object  ; *boolValue* : Boolean)",
			"Params": [
				[
					"rangeObj",
					"Object",
					"->",
					"Objet plage"
				],
				[
					"boolValue",
					"Booléen",
					"->",
					"Valeur du booléen à fixer"
				]
			],
			"Summary": "assigne une valeur booléenne spécifique à une plage de cellule désignée"
		},
		"VP SET BORDER": {
			"Syntax": "**VP SET BORDER** ( *rangeObj* : Object ; *borderStyleObj* : Object  ; *borderPosObj* : Object )",
			"Params": [
				[
					"rangeObj",
					"Object",
					"->",
					"Objet plage"
				],
				[
					"borderStyleObj",
					"Object",
					"->",
					"Objet contenant le style de bordure"
				],
				[
					"borderPosObj",
					"Object",
					"->",
					"Objet contenant la position de la bordure"
				]
			],
			"Summary": "applique le(s) style(s) de bordure défini(s) dans *borderStyleObj* et *borderPosObj* à la plage définie dans *rangeObj*"
		},
		"VP SET CELL STYLE": {
			"Syntax": "**VP SET CELL STYLE** ( *rangeObj* : Object  ; *styleObj*  : Object)",
			"Params": [
				[
					"rangeObj",
					"Object",
					"->",
					"Objet plage"
				],
				[
					"styleObj",
					"Object",
					"->",
					"Objet style"
				]
			],
			"Summary": "applique le(s) style(s) défini(s) dans *styleObj* aux cellules définies dans *rangeObj*"
		},
		"VP SET COLUMN ATTRIBUTES": {
			"Syntax": "**VP SET COLUMN ATTRIBUTES** ( *rangeObj* : Object  ; *propertyObj* : Object)",
			"Params": [
				[
					"rangeObj",
					"Object",
					"->",
					"Objet plage"
				],
				[
					"propertyObj",
					"Object",
					"->",
					"Objet contenant des propriétés de colonnes"
				]
			],
			"Summary": "applique les attributs définis dans le paramètre *propertyObj* pour les colonnes de *rangeObj*"
		},
		"VP SET COLUMN COUNT": {
			"Syntax": "**VP SET COLUMN COUNT** ( *vpAreaName* : Text , *columnCount* : Integer { , *sheet* : Integer } )",
			"Params": [
				[
					"vpAreaName",
					"Text",
					"->",
					"Nom d'objet formulaire zone 4D View Pro"
				],
				[
					"columnCount",
					"Integer",
					"->",
					"Nombre de colonnes"
				],
				[
					"sheet",
					"Integer",
					"->",
					"Indice de la feuille (feuille courante si omis)"
				]
			],
			"Summary": "définit le nombre total de colonnes dans *vpAreaName*"
		},
		"VP SET CURRENT SHEET": {
			"Syntax": "**VP SET CURRENT SHEET** ( *vpAreaName* : Text ; *sheet* : Integer)",
			"Params": [
				[
					"vpAreaName",
					"Text",
					"->",
					"Nom d'objet formulaire zone 4D View Pro"
				],
				[
					"sheet",
					"Integer",
					"<-",
					"Index of the new current sheet"
				]
			],
			"Summary": "sets the current sheet in *vpAreaName*"
		},
		"VP SET CUSTOM FUNCTIONS": {
			"Syntax": "**VP SET CUSTOM FUNCTIONS** ( *vpAreaName* : Text ; *formulaObj* : Object  )",
			"Params": [
				[
					"vpAreaName",
					"Text",
					"->",
					"Nom d'objet formulaire zone 4D View Pro"
				],
				[
					"formulaObj",
					"Object",
					"->",
					"Objet formule"
				]
			],
			"Summary": "désigne les formules 4D qui peuvent être appelées directement à partir de formules 4D View Pro"
		},
		"VP SET DATA CONTEXT": {
			"Syntax": "**VP SET DATA CONTEXT** ( *vpAreaName* : Text ; *dataObj* : Object {; *options* : Object } {; *sheet* : Integer} )<br/>**VP SET DATA CONTEXT** ( *vpAreaName* : Text ; *dataColl* : Collection ; {*options* : Object } {; *sheet* : Integer} )",
			"Params": [
				[
					"vpAreaName",
					"Object",
					"->",
					"Nom d'objet formulaire zone 4D View Pro"
				],
				[
					"dataObj",
					"Object",
					"->",
					"Data object to load in the data context"
				],
				[
					"dataColl",
					"Object",
					"->",
					"Data collection to load in the data context"
				],
				[
					"options",
					"Object",
					"->",
					"Options supplémentaires"
				],
				[
					"sheet",
					"Integer",
					"->",
					"Indice de la feuille"
				]
			],
			"Summary": "sets the data context of a sheet"
		},
		"VP SET DATE TIME VALUE": {
			"Syntax": "**VP SET DATE TIME VALUE** ( *rangeObj* : Object ; *dateValue* : Date ; *timeValue* : Time {; *formatPattern* : Text } )",
			"Params": [
				[
					"rangeObj",
					"Object",
					"->",
					"Objet plage"
				],
				[
					"dateValue",
					"Date",
					"->",
					"Valeur date à fixer"
				],
				[
					"timeValue",
					"Heure",
					"->",
					"Valeur heure à fixer"
				],
				[
					"formatPattern",
					"Text",
					"->",
					"Format de la valeur"
				]
			],
			"Summary": "assigne une valeur date et heure spécifique à une plage de cellule désignée"
		},
		"VP SET DATE VALUE": {
			"Syntax": "**VP SET DATE VALUE** ( *rangeObj* : Object ; *dateValue* : Date { ; *formatPattern* : Text } )",
			"Params": [
				[
					"rangeObj",
					"Object",
					"->",
					"Objet plage"
				],
				[
					"dateValue",
					"Date",
					"->",
					"Valeur date à fixer"
				],
				[
					"formatPattern",
					"Text",
					"->",
					"Format de la valeur"
				]
			],
			"Summary": "assigne une valeur date à une plage de cellules désignée"
		},
		"VP SET DEFAULT STYLE": {
			"Syntax": "**VP SET DEFAULT STYLE** ( *vpAreaName* : Text ; *styleObj* : Object { ; *sheet* : Integer } )",
			"Params": [
				[
					"vpAreaName",
					"Text",
					"->",
					"Nom d'objet formulaire zone 4D View Pro"
				],
				[
					"styleObj",
					"Object",
					"->",
					"Objet style"
				],
				[
					"sheet",
					"Integer",
					"->",
					"Indice de la feuille (par défaut = feuille courante)"
				]
			],
			"Summary": "définit, dans le paramètre *styleObj*, le style d'une feuille (*sheet*) en tant que style par défaut"
		},
		"VP SET FIELD": {
			"Syntax": "**VP SET FIELD** ( *rangeObj* : Object ; *field* : Pointer { ; *formatPattern* : Text } )",
			"Params": [
				[
					"rangeObj",
					"Object",
					"->",
					"Objet plage"
				],
				[
					"field",
					"Pointeur",
					"->",
					"Référence au champ dans la structure virtuelle"
				],
				[
					"formatPattern",
					"Text",
					"->",
					"Format du champ"
				]
			],
			"Summary": "assigne un champ spécifique de la base 4D à une plage de cellules désignée"
		},
		"VP SET FORMULA": {
			"Syntax": "**VP SET FORMULA** ( *rangeObj* : Object ; *formula* : Text { ; *formatPattern* : Text } )",
			"Params": [
				[
					"rangeObj",
					"Object",
					"->",
					"Objet plage"
				],
				[
					"formula",
					"Text",
					"->",
					"Formule ou méthode 4D"
				],
				[
					"formatPattern",
					"Text",
					"->",
					"Format du champ"
				]
			],
			"Summary": "assigne une formule spécifique ou une méthode 4D à une plage de cellules désignée"
		},
		"VP SET FORMULAS": {
			"Syntax": "**VP SET FORMULAS** ( *rangeObj* : Object ; *formulasCol* : Collection )",
			"Params": [
				[
					"rangeObj",
					"Object",
					"->",
					"Cell range object"
				],
				[
					"formulasCol",
					"Collection",
					"->",
					"Collection de formules"
				]
			],
			"Summary": "affecte une collection de formules commençant par la plage de cellule spécifiée"
		},
		"VP SET FROZEN PANES": {
			"Syntax": "**VP SET FROZEN PANES** ( *vpAreaName* : Text ; *paneObj* : Object { ; *sheet* : Integer } )",
			"Params": [
				[
					"vpAreaName",
					"Text",
					"->",
					"Nom d'objet formulaire zone 4D View Pro"
				],
				[
					"paneObj",
					"Object",
					"->",
					"Objet contenant des informations sur les colonnes et lignes figées"
				],
				[
					"sheet",
					"Integer",
					"->",
					"Indice de la feuille (feuille courante si omis)"
				]
			],
			"Summary": "fige les lignes et colonnes de *paneObj* afin qu'ils s'affichent constamment dans *vpAreaName*"
		},
		"VP SET NUM VALUE": {
			"Syntax": "**VP SET NUM VALUE** ( *rangeObj* : Object ; *numberValue* : Number { ; *formatPattern* : Text } )",
			"Params": [
				[
					"rangeObj",
					"Object",
					"->",
					"Objet plage"
				],
				[
					"numberValue",
					"Nombre",
					"->",
					"Valeur du nombre à fixer"
				],
				[
					"formatPattern",
					"Text",
					"->",
					"Format de la valeur"
				]
			],
			"Summary": "assigne une valeur numérique spécifique à une plage de cellules désignée"
		},
		"VP SET PRINT INFO": {
			"Syntax": "**VP SET PRINT INFO** ( *vpAreaName* : Text ; *printInfo* : Object { ; *sheet* : Integer }  )",
			"Params": [
				[
					"vpAreaName",
					"Text",
					"->",
					"Nom de la zone 4D View Pro"
				],
				[
					"printInfo",
					"Object",
					"->",
					"Objet contenant les attributs d'impression"
				],
				[
					"sheet",
					"Integer",
					"->",
					"Indice de la feuille (feuille courante si omis)"
				]
			],
			"Summary": "définit les attributs à utiliser lors de l'impression de *vpAreaName*"
		},
		"VP SET ROW ATTRIBUTES": {
			"Syntax": "**VP SET ROW ATTRIBUTES** ( *rangeObj* : Object ; *propertyObj* : Object  )",
			"Params": [
				[
					"rangeObj",
					"Object",
					"->",
					"Plage de lignes"
				],
				[
					"propertyObj",
					"Object",
					"->",
					"Objet contenant des propriétés de lignes"
				]
			],
			"Summary": "applique les attributs définis dans le paramètre *propertyObj* pour les lignes de *rangeObj*"
		},
		"VP SET ROW COUNT": {
			"Syntax": "**VP SET ROW COUNT** ( *vpAreaName* : Text ; *rowCount* : Integer { ; *sheet* : Integer }  )",
			"Params": [
				[
					"vpAreaName",
					"Text",
					"->",
					"Nom d'objet formulaire zone 4D View Pro"
				],
				[
					"rowCount",
					"Integer",
					"->",
					"Nombre de lignes"
				],
				[
					"sheet",
					"Integer",
					"->",
					"Indice de la feuille (feuille courante si omis)"
				]
			],
			"Summary": "définit le nombre total de lignes dans *vpAreaName*"
		},
		"VP SET SELECTION": {
			"Syntax": "**VP SET SELECTION** ( *rangeObj* : Object  )",
			"Params": [
				[
					"rangeObj",
					"Object",
					"->",
					"Objet plage de toutes les cellules"
				]
			],
			"Summary": "définit comme sélection les cellules spécifiées, et définit comme active la première cellule"
		},
		"VP SET SHEET COUNT": {
			"Syntax": "**VP SET SHEET COUNT** ( *vpAreaName* : Text ; *number* : Integer  )",
			"Params": [
				[
					"vpAreaName",
					"Text",
					"->",
					"Nom d'objet formulaire zone 4D View Pro"
				],
				[
					"number",
					"Integer",
					"->",
					"Nombre de feuilles"
				]
			],
			"Summary": "sets the number of sheets in *vpAreaName*"
		},
		"VP SET SHEET NAME": {
			"Syntax": "**VP SET SHEET NAME** ( *vpAreaName* : Text ; *name* : Text {; *sheet*: Integer} )",
			"Params": [
				[
					"vpAreaName",
					"Text",
					"->",
					"Nom d'objet formulaire zone 4D View Pro"
				],
				[
					"name",
					"Text",
					"->",
					"New name for the sheet"
				],
				[
					"sheet",
					"Integer",
					"->",
					"Index of the sheet to be renamed"
				]
			],
			"Summary": "renames a sheet in the document loaded in *vpAreaName*"
		},
		"VP SET SHEET OPTIONS": {
			"Syntax": "**VP SET SHEET OPTIONS** ( *vpAreaName* : Text; *sheetOptions* : Object { ; *sheet* : Integer}  )",
			"Params": [
				[
					"vpAreaName",
					"Object",
					"->",
					"Nom de la zone 4D View Pro"
				],
				[
					"sheetOptions",
					"Object",
					"->",
					"Option(s) de la feuille à définir"
				],
				[
					"sheet",
					"Object",
					"->",
					"Indice de la feuille (feuille courante si omis)"
				]
			],
			"Summary": "permet de définir plusieurs options appliquées à une feuille de la zone *vpAreaName*"
		},
		"VP SET SHOW PRINT LINES": {
			"Syntax": "**VP SET SHOW PRINT LINES** ( *vpAreaName* : Text {; visible : Boolean}{; *sheet* : Integer} )",
			"Params": [
				[
					"vpAreaName",
					"Text",
					"->",
					"Nom d'objet formulaire zone 4D View Pro"
				],
				[
					"visible",
					"Booléen",
					"->",
					"Print lines displayed if True (default), hidden if False"
				],
				[
					"sheet",
					"Integer",
					"->",
					"Indice de la feuille (feuille courante si omis)"
				]
			],
			"Summary": "sets whether to display print preview lines in a spreadsheet."
		},
		"VP SET TEXT VALUE": {
			"Syntax": "**VP SET TEXT VALUE** ( *rangeObj* : Object ; *textValue* : Text { ; *formatPattern* : Text }  )",
			"Params": [
				[
					"rangeObj",
					"Object",
					"->",
					"Objet plage"
				],
				[
					"textValue",
					"Text",
					"->",
					"Valeur texte à fixer"
				],
				[
					"formatPattern",
					"Text",
					"->",
					"Format de la valeur"
				]
			],
			"Summary": "assigne une valeur texte spécifique à une plage de cellules désignée"
		},
		"VP SET TIME VALUE": {
			"Syntax": "**VP SET TIME VALUE** ( *rangeObj* : Object ; *timeValue* : Text { ; *formatPattern* : Text }  )",
			"Params": [
				[
					"rangeObj",
					"Object",
					"->",
					"Objet plage"
				],
				[
					"timeValue",
					"Text",
					"->",
					"Valeur heure à fixer"
				],
				[
					"formatPattern",
					"Text",
					"->",
					"Format de la valeur"
				]
			],
			"Summary": "assigns a specified time value to a designated cell range"
		},
		"VP SET VALUE": {
			"Syntax": "**VP SET VALUE** ( *rangeObj* : Object ; *valueObj* : Object )",
			"Params": [
				[
					"rangeObj",
					"Object",
					"->",
					"Objet plage"
				],
				[
					"valueObj",
					"Object",
					"->",
					"Valeurs de la cellule et options de formatage"
				]
			],
			"Summary": "assigne une valeur spécifique à une plage de cellules désignée"
		},
		"VP SET VALUES": {
			"Syntax": "**VP SET VALUES** ( *rangeObj* : Object ; *valuesCol* : Collection )",
			"Params": [
				[
					"rangeObj",
					"Object",
					"->",
					"Objet plage"
				],
				[
					"valuesCol",
					"Collection",
					"->",
					"Collection de valeurs"
				]
			],
			"Summary": "affecte une collection de valeurs qui commence à partir de la plage de cellule spécifiée"
		},
		"VP SET WORKBOOK OPTIONS": {
			"Syntax": "**VP SET WORKBOOK OPTIONS** ( *vpAreaName* : Text ; *optionObj* : Object)",
			"Params": [
				[
					"vpAreaName",
					"Text",
					"->",
					"Nom d'objet formulaire zone 4D View Pro"
				],
				[
					"optionObj",
					"Object",
					"->",
					"Object containing the workbook options to be set"
				]
			],
			"Summary": "sets the workbook options in *vpAreaName*"
		},
		"VP SHOW CELL": {
			"Syntax": "**VP SHOW CELL** ( *rangeObj* : Object { ; *vPos* : Integer; *hPos* : Integer } )",
			"Params": [
				[
					"rangeObj",
					"Object",
					"->",
					"Objet plage"
				],
				[
					"vPos",
					"Integer",
					"->",
					"Position verticale de la vue de la cellule ou de la ligne"
				],
				[
					"hPos",
					"Integer",
					"->",
					"Position horizontale de la vue de la cellule ou de la ligne"
				]
			],
			"Summary": "repositionne verticalement et horizontalement la vue de *rangeObj*"
		},
		"VP SUSPEND COMPUTING": {
			"Syntax": "**VP SUSPEND COMPUTING** ( *vpAreaName* : Text )",
			"Params": [
				[
					"vpAreaName",
					"Text",
					"->",
					"Nom d'objet formulaire zone 4D View Pro"
				]
			],
			"Summary": "stoppe le calcul de toutes les formules dans *vpAreaName*"
		}
	},
	"Margins": {
		"new()": {
			"Syntax": "**.new**()",
			"Params": [],
			"Summary": ""
		},
		"get right()": {
			"Syntax": "**.get right**() : Integer",
			"Params": [
				[
					"",
					"Integer",
					"<-"
				]
			],
			"Summary": ""
		},
		"get bottom()": {
			"Syntax": "**.get bottom**() : Integer",
			"Params": [
				[
					"",
					"Integer",
					"<-"
				]
			],
			"Summary": ""
		},
		"get footer()": {
			"Syntax": "**.get footer**() : Integer",
			"Params": [
				[
					"",
					"Integer",
					"<-"
				]
			],
			"Summary": ""
		},
		"get left()": {
			"Syntax": "**.get left**() : Integer",
			"Params": [
				[
					"",
					"Integer",
					"<-"
				]
			],
			"Summary": ""
		},
		"get header()": {
			"Syntax": "**.get header**() : Integer",
			"Params": [
				[
					"",
					"Integer",
					"<-"
				]
			],
			"Summary": ""
		},
		"get top()": {
			"Syntax": "**.get top**() : Integer",
			"Params": [
				[
					"",
					"Integer",
					"<-"
				]
			],
			"Summary": ""
		}
	},
	"PaperSize": {
		"new()": {
			"Syntax": "**.new**()",
			"Params": [],
			"Summary": ""
		},
		"get width()": {
			"Syntax": "**.get width**() : Integer",
			"Params": [
				[
					"",
					"Integer",
					"<-"
				]
			],
			"Summary": ""
		},
		"get height()": {
			"Syntax": "**.get height**() : Integer",
			"Params": [
				[
					"",
					"Integer",
					"<-"
				]
			],
			"Summary": ""
		},
		"get kind()": {
			"Syntax": "**.get kind**() : Text",
			"Params": [
				[
					"",
					"Text",
					"<-"
				]
			],
			"Summary": ""
		}
	},
	"PrintInfos": {
		"new()": {
			"Syntax": "**.new**()",
			"Params": [],
			"Summary": ""
		},
		"get headerCenterImage()": {
			"Syntax": "**.get headerCenterImage**() : Text",
			"Params": [
				[
					"",
					"Text",
					"<-"
				]
			],
			"Summary": ""
		},
		"get bestFitColumns()": {
			"Syntax": "**.get bestFitColumns**() : Boolean",
			"Params": [
				[
					"",
					"Boolean",
					"<-"
				]
			],
			"Summary": ""
		},
		"get columnStart()": {
			"Syntax": "**.get columnStart**() : Integer",
			"Params": [
				[
					"",
					"Integer",
					"<-"
				]
			],
			"Summary": ""
		},
		"get bestFitRows()": {
			"Syntax": "**.get bestFitRows**() : Boolean",
			"Params": [
				[
					"",
					"Boolean",
					"<-"
				]
			],
			"Summary": ""
		},
		"get blackAndWhite()": {
			"Syntax": "**.get blackAndWhite**() : Boolean",
			"Params": [
				[
					"",
					"Boolean",
					"<-"
				]
			],
			"Summary": ""
		},
		"get firstPageNumber()": {
			"Syntax": "**.get firstPageNumber**() : Integer",
			"Params": [
				[
					"",
					"Integer",
					"<-"
				]
			],
			"Summary": ""
		},
		"get headerRightImage()": {
			"Syntax": "**.get headerRightImage**() : Text",
			"Params": [
				[
					"",
					"Text",
					"<-"
				]
			],
			"Summary": ""
		},
		"get fitPagesWide()": {
			"Syntax": "**.get fitPagesWide**() : Integer",
			"Params": [
				[
					"",
					"Integer",
					"<-"
				]
			],
			"Summary": ""
		},
		"get centering()": {
			"Syntax": "**.get centering**() : Integer",
			"Params": [
				[
					"",
					"Integer",
					"<-"
				]
			],
			"Summary": ""
		},
		"get zoomFactor()": {
			"Syntax": "**.get zoomFactor**() : Integer",
			"Params": [
				[
					"",
					"Integer",
					"<-"
				]
			],
			"Summary": ""
		},
		"get rowStart()": {
			"Syntax": "**.get rowStart**() : Integer",
			"Params": [
				[
					"",
					"Integer",
					"<-"
				]
			],
			"Summary": ""
		},
		"get footerRightImage()": {
			"Syntax": "**.get footerRightImage**() : Text",
			"Params": [
				[
					"",
					"Text",
					"<-"
				]
			],
			"Summary": ""
		},
		"get columnEnd()": {
			"Syntax": "**.get columnEnd**() : Integer",
			"Params": [
				[
					"",
					"Integer",
					"<-"
				]
			],
			"Summary": ""
		},
		"get qualityFactor()": {
			"Syntax": "**.get qualityFactor**() : Integer",
			"Params": [
				[
					"",
					"Integer",
					"<-"
				]
			],
			"Summary": ""
		},
		"get fitPagesTall()": {
			"Syntax": "**.get fitPagesTall**() : Integer",
			"Params": [
				[
					"",
					"Integer",
					"<-"
				]
			],
			"Summary": ""
		},
		"get paperSize()": {
			"Syntax": "**.get paperSize**() : cs.ViewPro.PaperSize",
			"Params": [
				[
					"",
					"cs.ViewPro.PaperSize",
					"<-"
				]
			],
			"Summary": ""
		},
		"get footerCenter()": {
			"Syntax": "**.get footerCenter**() : Text",
			"Params": [
				[
					"",
					"Text",
					"<-"
				]
			],
			"Summary": ""
		},
		"get orientation()": {
			"Syntax": "**.get orientation**() : Integer",
			"Params": [
				[
					"",
					"Integer",
					"<-"
				]
			],
			"Summary": ""
		},
		"get footerCenterImage()": {
			"Syntax": "**.get footerCenterImage**() : Text",
			"Params": [
				[
					"",
					"Text",
					"<-"
				]
			],
			"Summary": ""
		},
		"get footerLeft()": {
			"Syntax": "**.get footerLeft**() : Text",
			"Params": [
				[
					"",
					"Text",
					"<-"
				]
			],
			"Summary": ""
		},
		"get showBorder()": {
			"Syntax": "**.get showBorder**() : Boolean",
			"Params": [
				[
					"",
					"Boolean",
					"<-"
				]
			],
			"Summary": ""
		},
		"get footerLeftImage()": {
			"Syntax": "**.get footerLeftImage**() : Text",
			"Params": [
				[
					"",
					"Text",
					"<-"
				]
			],
			"Summary": ""
		},
		"get footerRight()": {
			"Syntax": "**.get footerRight**() : Text",
			"Params": [
				[
					"",
					"Text",
					"<-"
				]
			],
			"Summary": ""
		},
		"get headerCenter()": {
			"Syntax": "**.get headerCenter**() : Text",
			"Params": [
				[
					"",
					"Text",
					"<-"
				]
			],
			"Summary": ""
		},
		"get headerLeft()": {
			"Syntax": "**.get headerLeft**() : Text",
			"Params": [
				[
					"",
					"Text",
					"<-"
				]
			],
			"Summary": ""
		},
		"get headerLeftImage()": {
			"Syntax": "**.get headerLeftImage**() : Text",
			"Params": [
				[
					"",
					"Text",
					"<-"
				]
			],
			"Summary": ""
		},
		"get headerRight()": {
			"Syntax": "**.get headerRight**() : Text",
			"Params": [
				[
					"",
					"Text",
					"<-"
				]
			],
			"Summary": ""
		},
		"get margin()": {
			"Syntax": "**.get margin**() : cs.ViewPro.Margins",
			"Params": [
				[
					"",
					"cs.ViewPro.Margins",
					"<-"
				]
			],
			"Summary": ""
		},
		"get pageOrder()": {
			"Syntax": "**.get pageOrder**() : Integer",
			"Params": [
				[
					"",
					"Integer",
					"<-"
				]
			],
			"Summary": ""
		},
		"get pageRange()": {
			"Syntax": "**.get pageRange**() : Text",
			"Params": [
				[
					"",
					"Text",
					"<-"
				]
			],
			"Summary": ""
		},
		"get showRowHeader()": {
			"Syntax": "**.get showRowHeader**() : Integer",
			"Params": [
				[
					"",
					"Integer",
					"<-"
				]
			],
			"Summary": ""
		},
		"get repeatColumnEnd()": {
			"Syntax": "**.get repeatColumnEnd**() : Integer",
			"Params": [
				[
					"",
					"Integer",
					"<-"
				]
			],
			"Summary": ""
		},
		"get showGridLine()": {
			"Syntax": "**.get showGridLine**() : Boolean",
			"Params": [
				[
					"",
					"Boolean",
					"<-"
				]
			],
			"Summary": ""
		},
		"get repeatColumnStart()": {
			"Syntax": "**.get repeatColumnStart**() : Integer",
			"Params": [
				[
					"",
					"Integer",
					"<-"
				]
			],
			"Summary": ""
		},
		"get repeatRowEnd()": {
			"Syntax": "**.get repeatRowEnd**() : Integer",
			"Params": [
				[
					"",
					"Integer",
					"<-"
				]
			],
			"Summary": ""
		},
		"get repeatRowStart()": {
			"Syntax": "**.get repeatRowStart**() : Integer",
			"Params": [
				[
					"",
					"Integer",
					"<-"
				]
			],
			"Summary": ""
		},
		"get showColumnHeader()": {
			"Syntax": "**.get showColumnHeader**() : Integer",
			"Params": [
				[
					"",
					"Integer",
					"<-"
				]
			],
			"Summary": ""
		},
		"get rowEnd()": {
			"Syntax": "**.get rowEnd**() : Integer",
			"Params": [
				[
					"",
					"Integer",
					"<-"
				]
			],
			"Summary": ""
		},
		"get useMax()": {
			"Syntax": "**.get useMax**() : Boolean",
			"Params": [
				[
					"",
					"Boolean",
					"<-"
				]
			],
			"Summary": ""
		},
		"get watermark()": {
			"Syntax": "**.get watermark**() : Collection",
			"Params": [
				[
					"",
					"Collection",
					"<-"
				]
			],
			"Summary": ""
		}
	},
	"Watermark": {
		"new()": {
			"Syntax": "**.new**()",
			"Params": [],
			"Summary": ""
		},
		"get height()": {
			"Syntax": "**.get height**() : Integer",
			"Params": [
				[
					"",
					"Integer",
					"<-"
				]
			],
			"Summary": ""
		},
		"get width()": {
			"Syntax": "**.get width**() : Integer",
			"Params": [
				[
					"",
					"Integer",
					"<-"
				]
			],
			"Summary": ""
		},
		"get imageSrc()": {
			"Syntax": "**.get imageSrc**() : Text",
			"Params": [
				[
					"",
					"Text",
					"<-"
				]
			],
			"Summary": ""
		},
		"get x()": {
			"Syntax": "**.get x**() : Integer",
			"Params": [
				[
					"",
					"Integer",
					"<-"
				]
			],
			"Summary": ""
		},
		"get page()": {
			"Syntax": "**.get page**() : Text",
			"Params": [
				[
					"",
					"Text",
					"<-"
				]
			],
			"Summary": ""
		},
		"get y()": {
			"Syntax": "**.get y**() : Integer",
			"Params": [
				[
					"",
					"Integer",
					"<-"
				]
			],
			"Summary": ""
		}
	}
}